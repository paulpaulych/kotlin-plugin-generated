/*
 * Copyright 2018 Fabian Mastenbroek.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
buildscript{
    repositories{
        maven{
            url = uri("$buildDir/repo")
        }
    }
}
plugins {
    kotlin("jvm")
    id("org.jlleitschuh.gradle.ktlint")
    `java-gradle-plugin`
    `maven-publish`
    id("com.gradle.plugin-publish") version "0.10.1"
    id("com.jfrog.bintray") version "1.8.4"
}

description = "Gradle plugin for marking Kotlin-generated code with an annotation."

repositories {
    jcenter()
}

publishing{
    repositories{
        maven{
            url = uri("$buildDir/repo")
        }
    }
}

dependencies {
    compile(gradleApi())
    compile(kotlin("stdlib"))
    compile(kotlin("gradle-plugin-api"))
    compileOnly(project(":plugin-compiler", configuration = "embeddable"))

    runtimeOnly(kotlin("compiler-embeddable"))
}

/* Compilation */
tasks.withType<KotlinCompile> {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.jar {
    // Embed compiler plugin in jar
    from(zipTree(configurations.compileClasspath.get().first { it.name.startsWith("plugin-compiler") }))

    manifest {
        attributes["Specification-Title"] = project.name
        attributes["Specification-Version"] = project.version
        attributes["Implementation-Title"] = "nl.fabianm.kotlin.plugin.generated.gradle"
        attributes["Implementation-Version"] = project.version
    }
}

/* Gradle plugin */
gradlePlugin {
    plugins {
        create("generated") {
            id = "nl.fabianm.kotlin.plugin.generated"
            implementationClass = "nl.fabianm.kotlin.plugin.generated.gradle.GeneratedGradleSubplugin"
        }
    }
}

/* Publishing */
pluginBundle {
    website = "https://github.com/fabianishere/kotlin-plugin-generated"
    vcsUrl = "https://github.com/fabianishere/kotlin-plugin-generated.git"
    description = "A Kotlin compiler plugin that annotates Kotlin-generated methods to signify to code analyzers" +
        " that these methods have been generated by the compiler."
    tags = listOf("kotlin", "compiler", "generated", "plugin", "coverage", "test")

    (plugins) {
        "generated" {
            id = "nl.fabianm.kotlin.plugin.generated"
            displayName = "Kotlin Generated compiler plugin"
        }
    }

    mavenCoordinates {
        groupId = "nl.fabianm.kotlin.plugin.generated"
    }
}
//
//bintray {
//    user = "paulpaulych"
//    key =
//    setPublications("pluginMaven", "generatedPluginMarkerMaven")
//    with(pkg) {
//        repo = "kotlin-plugin-generated"
//        name = project.name
//        userOrg = "fabianishere"
//        desc = "A Kotlin compiler plugin that annotates Kotlin-generated methods to signify to code analyzers" +
//            " that these methods have been generated by the compiler."
//        websiteUrl = "https://github.com/fabianishere/kotlin-plugin-generated"
//        issueTrackerUrl = "https://github.com/fabianishere/kotlin-plugin-generated/issues"
//        vcsUrl = "https://github.com/fabianishere/kotlin-plugin-generated.git"
//        setLicenses("Apache-2.0")
//        githubRepo = "fabianishere/kotlin-plugin-generated"
//        githubReleaseNotesFile = "README.md"
//    }
//}
